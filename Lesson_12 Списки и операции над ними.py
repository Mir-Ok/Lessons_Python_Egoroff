# Список - упорядоченная коллекция элементов, позволяют хранить в одном месте взаимосвязанные данные одного или разных
# типов.
lst = [True, 43, 'hello', 5.4, [4, 5, 6]] # --- прямое задание списка
lst2 = [] # ----------------------------------- создание пустого списка
lst3 = list() # ------------------------------- создание через функцию

# Операции над списками

print(type(lst))  # --- < class 'list' >  определение типа переменной

print(len(lst))  # --- 5 длина списка, сколько элементов в нем. вложенный список считается одним элементов, независимо от его длины

print([12, 22] + [13, 23])  # --- [12, 22, 13, 23] конкатенация списков, склеивание через сложение
print(lst + [12, 22])  # --- [True, 43, 'hello', 5.4, [4, 5, 6], 12, 22] интересно, что список не стал одним элементом
# print(lst + 12)        # --- TypeError: can only concatenate list (not "int") to list
print(lst + [12])  # --- [True, 43, 'hello', 5.4, [4, 5, 6], 12] так срабатывает

print(lst * 2)  # --- [True, 43, 'hello', 5.4, [4, 5, 6], True, 43, 'hello', 5.4, [4, 5, 6]] дублирование через умножение

# проверка наличия элемента в списке
print(5.4 in lst)  # --- True
print([4, 5] in lst)  # --- False, потому что только часть элемента

# операции только для числовых списков, при наличии других типов - ОШИБКА!
w = [28, 45, -35, 58, 96, 1, 25]

print(max(w))                   # --- 96 максимальное значение
print(min(w))                   # --- -35 минимальное значение
print(sum(w))                   # --- 218 сумма элементов
print(sorted(w))                # --- [-35, 1, 25, 28, 45, 58, 96] сортировка по взрастанию
print(sorted(w, reverse=True))  # --- [96, 58, 45, 28, 25, 1, -35] сортировка по убыванию
print(sum(w)/len(w))            # --- 31.142857142857142 среднее арифметическое

# сравнение списков

print([100, 54] > [34, 543, 654, 43])   # --- True сравнение идет по соотв. элементам
print([1, 2, 3] == [1, 2, 3])           # --- True, так как полностью совпадают
print([1, 2, 3] == [1, 2, 're'])        # --- False, не выдает ошибку, хотя есть строка? только при операторе ==
# print([1, 2, 3] > [1, 2, 're'])         # --- TypeError: '>' not supported between instances of 'int' and 'str'


# Как ввести последовательность чисел списком?

s = input()
print(s)  # --> '7 8 11' принимает как одну строку, не то
s.split()  # разбиваем по пробелам, но получаем список из строк, не то

s = list(map(int, input().split()))
print(s)  # --> [7, 8, 9, 1, 11]
